<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <ApplicationIcon />
    <OutputType>Library</OutputType>
    <StartupObject />
  </PropertyGroup>
  <PropertyGroup>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <id>Razorvine.Serpent</id>
    <version>1.18.0.0</version>
    <!-- from assembly info -->
    <title>Razorvine.Serpent</title>
    <authors>Irmen de Jong</authors>
    <owners>Irmen de Jong</owners>
    <licenseUrl>http://opensource.org/licenses/MIT</licenseUrl>
    <projectUrl>https://github.com/irmen/Serpent</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>
      Serpent Python literal expression serialization.

      Serpent provides Python ast.literal_eval() compatible object tree serialization.
      It serializes an object tree into bytes that can be transferred to Python and
      decoded there (using ast.literal_eval()). It can ofcourse also deserialize
      such a Python expression itself, back into the equivalent .NET datatypes.

      More info for the Python version is on Pypi: https://pypi.python.org/pypi/serpent
    </description>
    <summary>Serpent Python literal expression serialization</summary>
    <releaseNotes>
      CRITICAL FIX: rewrote serialization and parsing of strings containing chars above 255, this didn't work. Now mimics python's repr(str) form as closely as possible.
      Added Serializer.MaximumLevel to avoid too deep recursion resulting in stack overflow errors.
      Serializer.MaximumLevel decreased to 500.
    </releaseNotes>
    <copyright>Copyright 2017</copyright>
    <tags>serialization python pyro</tags>
  </PropertyGroup>
  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>
</Project>